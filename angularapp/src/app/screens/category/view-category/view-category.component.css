@import 'tailwindcss/base';
@import 'tailwindcss/components';
@import 'tailwindcss/utilities';



/* Add this CSS to your component's CSS file or globally in your styles.css file */

.chat-container {
    position: fixed;
    bottom: 20px;
    right: 20px;
    z-index: 50;
    background-color: #ffffff;
    border: 1px solid #ccc;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    border-radius: 5px;
    width: 350px;
  }
  
  .chat-header {
    padding: 10px;
    background-color: #f0f0f0;
    border-bottom: 1px solid #ccc;
    text-align: right;
  }
  
  .close-icon {
    cursor: pointer;
  }
  
  .chat-body {
    padding: 10px;
    height: 200px; /* Adjust height as needed */
    overflow-y: auto;
  }
  
  .chat-footer {
    padding: 10px;
    border-top: 1px solid #ccc;
  }
  
  .message-input {
    width: calc(100% - 70px);
    padding: 8px;
    border: 1px solid #ccc;
    border-radius: 5px;
  }
  
  .send-button {
    margin-left: 5px;
    padding: 8px 15px;
    border: none;
    border-radius: 5px;
    background-color: #007bff;
    color: #ffffff;
    cursor: pointer;
  }
  

/* Style for the container of each message */
/* Chat container */
.chat-container {
  width: 40%;
  height: 400px; /* Set height as needed */
  display: flex;
  flex-direction: column;
}

/* Chat header */
.chat-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 10px;
}

/* Close icon */
.close-icon {
  cursor: pointer;
}

/* Chat body */
.chat-body {
  flex: 1;
  overflow-y: auto; /* Enable vertical scrolling */
  padding: 10px;
}

/* Message container */
.message-container {
  margin-bottom: 10px;
}

/* Message */
.message {
  display: inline-block;
  padding: 8px 12px;
  border-radius: 10px;
  max-width: 70%;
}

/* Sent message */
/* Sent message */
.sent {
  background-color: #DCF8C6; /* Light green */
  align-self: flex-end; /* Align to the right side */
  margin-left: 60%;
}

/* Received message */
.received {
  background-color: #EAEAEA; /* Light gray */
  align-self: flex-start; /* Align to the left side */
}


/* Message content */
.message-content {
  display: flex;
  flex-direction: column;
}

/* Message text */
.message-text {
  margin-bottom: 4px;
}

/* Timestamp */
.timestamp {
  font-size: 12px;
  color: #666;
}

/* Chat footer */
.chat-footer {
  display: flex;
  align-items: center;
  padding: 10px;
}

/* Message input */
.message-input {
  flex: 1;
  padding: 8px;
  margin-right: 10px;
}

/* Send button */
.send-button {
  padding: 8px 16px;
  background-color: #007BFF; /* Blue */
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
}

/* Circle icon */
.circle-icon {
  width: 30px;
  height: 30px;
  border-radius: 50%;
  background-color: #007BFF; /* Blue */
  /* margin-right: 10px; */
}



.blurred-button {
  filter: blur(2px);
  pointer-events: none;
  opacity: 0.5;
}




.modal {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent background */
  z-index: 9999; /* Ensure it's on top of everything */
  display: flex;
  justify-content: center; /* Center horizontally */
  align-items: center; /* Center vertically */
  
}

.modal-content {
  background-color: white;
  padding: 20px;
  border-radius: 8px;
  text-align: center; /* Center the content */
  width: 60%;
}

.close-button {
  position: absolute;
  top: 10px;
  right: 10px;
  background: none;
  border: none;
  cursor: pointer;
  font-size: 16px;
  color: #333;
}

.modal-title {
  margin-bottom: 20px;
}

.button-container {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 10px;
}

.inspection-button {
  padding: 10px 20px;
  border: none;
  border-radius: 6px;
  background-color: #007bff;
  color: white;
  font-size: 16px;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

.inspection-button:hover {
  background-color: #0056b3;
}

/* Add any additional styling as needed */

.important-content {
  border: 2px solid #ff0000; /* Red border */
  padding: 10px;
  margin-bottom: 10px;
}

.material-symbols-outlined {
  font-variation-settings:
  'FILL' 0,
  'wght' 400,
  'GRAD' 0,
  'opsz' 24
}





/* spinner.component.css */
.spinner {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100px; /* Adjust as needed */
}



.modelViewPort {
  /* The black circle background around the model*/
  perspective: 1000px;
  width: 20rem;
  aspect-ratio: 1;
  border-radius: 50%;
  display: flex;
  justify-content: center;
  align-items: center;
  background: #000;
  overflow: hidden;
}
.eva {
  --EVA-ROTATION-DURATION: 4s;
  transform-style: preserve-3d;
  animation: rotateRight var(--EVA-ROTATION-DURATION) linear infinite alternate;
}
.head {
  position: relative;
  width: 6rem;
  height: 4rem;
  border-radius: 48% 53% 45% 55% / 79% 79% 20% 22%;
  background: linear-gradient(to right, white 45%, gray);
}
.eyeChamber {
  width: 4.5rem;
  height: 2.75rem;
  position: relative;
  left: 50%;
  top: 55%;
  border-radius: 45% 53% 45% 48% / 62% 59% 35% 34%;
  background-color: #0c203c;
  box-shadow: 0px 0px 2px 2px white, inset 0px 0px 0px 2px black;
  transform: translate(-50%, -50%);
  animation: moveRight var(--EVA-ROTATION-DURATION) linear infinite alternate;
}
.eye {
  width: 1.2rem;
  height: 1.5rem;
  position: absolute;
  border-radius: 50%;
}
.eye:first-child {
  left: 12px;
  top: 50%;
  background: repeating-linear-gradient(
    65deg,
    #9bdaeb 0px,
    #9bdaeb 1px,
    white 2px
  );
  box-shadow: inset 0px 0px 5px #04b8d5, 0px 0px 15px 1px #0bdaeb;
  transform: translate(0, -50%) rotate(-65deg);
}
.eye:nth-child(2) {
  right: 12px;
  top: 50%;
  background: repeating-linear-gradient(
    -65deg,
    #9bdaeb 0px,
    #9bdaeb 1px,
    white 2px
  );
  box-shadow: inset 0px 0px 5px #04b8d5, 0px 0px 15px 1px #0bdaeb;
  transform: translate(0, -50%) rotate(65deg);
}
.body {
  width: 6rem;
  height: 8rem;
  position: relative;
  margin-block-start: 0.25rem;
  border-radius: 47% 53% 45% 55% / 12% 9% 90% 88%;
  background: linear-gradient(to right, white 35%, gray);
}
.hand {
  position: absolute;
  left: -1.5rem;
  top: 0.75rem;
  width: 2rem;
  height: 5.5rem;
  border-radius: 40%;
  background: linear-gradient(to left, white 15%, gray);
  box-shadow: 5px 0px 5px rgba(0, 0, 0, 0.25);
  transform: rotateY(55deg) rotateZ(10deg);
}
.hand:first-child {
  animation: compensateRotation var(--EVA-ROTATION-DURATION) linear infinite
    alternate;
}
.hand:nth-child(2) {
  left: 92%;
  background: linear-gradient(to right, white 15%, gray);
  transform: rotateY(55deg) rotateZ(-10deg);
  animation: compensateRotationRight var(--EVA-ROTATION-DURATION) linear
    infinite alternate;
}
.scannerThing {
  width: 0;
  height: 0;
  position: absolute;
  left: 60%;
  top: 10%;
  border-top: 180px solid #9bdaeb;
  border-left: 250px solid transparent;
  border-right: 250px solid transparent;
  transform-origin: top left;
  mask: linear-gradient(to right, white, transparent 35%);
  animation: glow 2s cubic-bezier(0.86, 0, 0.07, 1) infinite;
}
.scannerOrigin {
  position: absolute;
  width: 8px;
  aspect-ratio: 1;
  border-radius: 50%;
  left: 60%;
  top: 10%;
  background: #9bdaeb;
  box-shadow: inset 0px 0px 5px rgba(0, 0, 0, 0.5);
  animation: moveRight var(--EVA-ROTATION-DURATION) linear infinite;
}
@keyframes rotateRight {
  from {
    transform: rotateY(0deg);
  }
  to {
    transform: rotateY(25deg);
  }
}
@keyframes moveRight {
  from {
    transform: translate(-50%, -50%);
  }
  to {
    transform: translate(-40%, -50%);
  }
}
@keyframes compensateRotation {
  from {
    transform: rotateY(55deg) rotateZ(10deg);
  }
  to {
    transform: rotatey(30deg) rotateZ(10deg);
  }
}
@keyframes compensateRotationRight {
  from {
    transform: rotateY(55deg) rotateZ(-10deg);
  }
  to {
    transform: rotateY(70deg) rotateZ(-10deg);
  }
}
@keyframes glow {
  from {
    opacity: 0;
  }
  20% {
    opacity: 1;
  }
  45% {
    transform: rotate(-25deg);
  }
  75% {
    transform: rotate(5deg);
  }
  100% {
    opacity: 0;
  }
}


